language: cpp

sudo: required
dist: trusty

compiler:
  - gcc
  - clang

os:
  - linux
  - osx
    osx_image: xcode12.2

env:
 - FS_BACKEND=ON
 - FS_BACKEND=OFF

matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: osx
      env: FS_BACKEND=ON DOCKERFILE=ub1804
    - os: osx
      env: FS_BACKEND=OFF DOCKERFILE=ub1804

addons:
  homebrew:
    packages:
      - cmake
      - boost
      - cppunit
      - hdf5
      - yaml-cpp
    update: false

before_cache:
  - brew cleanup

cache:
  directories:
    - $HOME/Library/Caches/Homebrew

before_install:
  - if [[ "$CXX" == "g++" ]];
    then
       pip install --upgrade pip;
       export CTEST_ARGS=-V;
       pip install --user cpp-coveralls;
    else
       export CTEST_ARGS=-VV;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then 
    sudo apt-get update -qq;
    sudo apt-get install -q gcc-4.8 g++-4.8 libstdc++-4.8-dev libcppunit-dev libboost-all-dev libhdf5-serial-dev libhdf5-dev libhdf5-7 -y;
    sudo apt-get install libyaml-cpp-dev -y;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update;
    brew install cmake boost cppunit hdf5 yaml-cpp;
    brew --env;
    fi
  - if [ "$CXX" == "g++" ]; then
    g++ --version; 
    else clang --version;
    fi

install:
  - if [ "$CXX" == "g++" ]; then 
    export CXX="g++-4.8"; 
    export COMPILER="g++";
    $CXX --version; 
    else 
    clang --version;
    fi

script:
  - ctest ${CTEST_ARGS} --output-on-failure -S .travis.ctest

after_success:
  - if [[ "$COMPILER" == "g++" ]]; then
    coveralls -b build -E ".*CMakeFiles.*" -e cli -e test -e tmp --gcov gcov-4.8 --gcov-options '\-lp' > /dev/null;
    fi

notifications:
  irc: "chat.freenode.net#gnode"
